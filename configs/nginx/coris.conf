# Configuration sp√©cifique pour Coris Intelligent Assistant
# Gestion des routes API, WebSockets, et interfaces d'administration

# Redirection HTTP vers HTTPS
server {
    listen 80;
    server_name _;
    
    # Health check simple pour load balancer
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Redirection HTTPS (sauf pour health check)
    location / {
        return 301 https://$host$request_uri;
    }
}

# Configuration HTTPS principale
server {
    listen 443 ssl http2;
    server_name coris-assistant.local _;
    
    # Configuration SSL
    ssl_certificate /etc/nginx/ssl/coris.crt;
    ssl_certificate_key /etc/nginx/ssl/coris.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # Headers de s√©curit√© sp√©cifiques
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-API-Version "1.0.0" always;
    
    # Configuration des limites
    limit_conn conn_limit_per_ip 20;
    limit_conn conn_limit_per_server 1000;
    
    # Root et index
    root /var/www/html;
    index index.html;
    
    # Configuration des logs pour ce serveur
    access_log /var/log/nginx/coris_access.log main;
    error_log /var/log/nginx/coris_error.log warn;

    # ============================================
    # ROUTES API PRINCIPALES
    # ============================================
    
    # API Chat - Route principale avec rate limiting
    location /api/v1/chat {
        limit_req zone=chat_limit burst=10 nodelay;
        
        # Headers pour l'API
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Configuration proxy
        proxy_pass http://coris_assistant_backend;
        proxy_redirect off;
        proxy_buffering off;
        
        # Timeouts sp√©ciaux pour les conversations
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Cache d√©sactiv√© pour les conversations
        proxy_cache off;
        add_header X-Cache-Status "BYPASS" always;
    }
    
    # API Escalation
    location /api/v1/escalate {
        limit_req zone=api_limit burst=5 nodelay;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_pass http://coris_assistant_backend;
        proxy_redirect off;
        
        # Timeouts courts pour escalation
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # API Historique des conversations - avec cache
    location /api/v1/conversation {
        limit_req zone=api_limit burst=20 nodelay;
        
        # Cache pour l'historique
        proxy_cache api_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_key "$scheme$request_method$host$request_uri$http_authorization";
        proxy_cache_bypass $http_pragma $http_authorization;
        proxy_no_cache $http_pragma $http_authorization;
        
        add_header X-Cache-Status $upstream_cache_status always;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_pass http://coris_assistant_backend;
        proxy_redirect off;
        
        # Timeouts standards
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check de l'application
    location /api/v1/health {
        access_log off;
        
        proxy_set_header Host $http_host;
        proxy_pass http://coris_assistant_backend;
        
        # Timeouts tr√®s courts pour health check
        proxy_connect_timeout 2s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Cache court pour √©viter de surcharger l'app
        proxy_cache api_cache;
        proxy_cache_valid 200 30s;
        add_header X-Cache-Status $upstream_cache_status always;
    }
    
    # API Authentification - avec rate limiting strict
    location /api/v1/auth {
        limit_req zone=auth_limit burst=3 nodelay;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_pass http://coris_assistant_backend;
        proxy_redirect off;
        
        # Pas de cache pour l'authentification
        proxy_cache off;
        add_header X-Cache-Status "BYPASS" always;
        
        # Timeouts courts
        proxy_connect_timeout 5s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
    }
    
    # API M√©triques - acc√®s restreint
    location /api/v1/metrics {
        # Restriction d'acc√®s par IP (√† adapter selon votre r√©seau)
        allow 172.20.0.0/16;  # R√©seau Docker
        allow 10.0.0.0/8;     # R√©seau priv√©
        allow 192.168.0.0/16; # R√©seau local
        deny all;
        
        proxy_pass http://coris_assistant_backend;
        proxy_set_header Host $http_host;
        
        # Pas de cache ni de logs pour les m√©triques
        access_log off;
        proxy_cache off;
    }
    
    # Toutes les autres routes API
    location /api/ {
        limit_req zone=api_limit burst=15 nodelay;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        proxy_pass http://coris_assistant_backend;
        proxy_redirect off;
        
        # Configuration g√©n√©rale
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # ============================================
    # INTERFACES D'ADMINISTRATION
    # ============================================
    
    # Interface Grafana - avec authentification
    location /grafana/ {
        # Restriction d'acc√®s
        allow 172.20.0.0/16;
        allow 10.0.0.0/8;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://grafana_backend/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuration sp√©ciale pour Grafana
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Server $http_host;
        proxy_redirect off;
        
        # Support WebSocket pour Grafana live
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Timeouts longs pour les dashboards
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # M√©triques Prometheus - acc√®s tr√®s restreint
    location /prometheus/ {
        # Acc√®s encore plus restreint
        allow 127.0.0.1;
        allow 172.20.0.0/24;  # Sous-r√©seau Docker sp√©cifique
        deny all;
        
        proxy_pass http://prometheus_backend/;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        
        access_log off;
        proxy_cache off;
    }

    # ============================================
    # GESTION DES ERREURS ET STATIQUES
    # ============================================
    
    # Documentation API (si disponible)
    location /docs {
        proxy_pass http://coris_assistant_backend;
        proxy_set_header Host $http_host;
        
        # Cache pour la documentation
        proxy_cache api_cache;
        proxy_cache_valid 200 1h;
        add_header X-Cache-Status $upstream_cache_status always;
    }
    
    # Fichiers statiques
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Compression pour les statiques
        gzip_static on;
        
        # Pas de logs pour les statiques
        access_log off;
    }
    
    # Favicon
    location = /favicon.ico {
        alias /var/www/static/favicon.ico;
        expires 1y;
        access_log off;
    }
    
    # Robots.txt
    location = /robots.txt {
        alias /var/www/static/robots.txt;
        expires 1d;
        access_log off;
    }
    
    # Page d'accueil par d√©faut
    location = / {
        return 200 '<!DOCTYPE html>
<html>
<head>
    <title>Coris Intelligent Assistant</title>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; text-align: center; margin-top: 100px; }
        .container { max-width: 600px; margin: 0 auto; }
        .status { color: #28a745; font-weight: bold; }
        .links { margin-top: 30px; }
        .links a { margin: 0 15px; color: #007bff; text-decoration: none; }
    </style>
</head>
<body>
    <div class="container">
        <h1>ü§ñ Coris Intelligent Assistant</h1>
        <p class="status">‚úÖ Service op√©rationnel</p>
        <p>Assistant intelligent pour les applications Coris Money</p>
        <div class="links">
            <a href="/api/v1/health">Health Check</a>
            <a href="/docs">Documentation API</a>
            <a href="/grafana/">Monitoring</a>
        </div>
    </div>
</body>
</html>';
        add_header Content-Type "text/html; charset=utf-8";
    }

    # ============================================
    # GESTION DES ERREURS
    # ============================================
    
    # Pages d'erreur personnalis√©es
    error_page 404 /error_pages/404.html;
    error_page 500 502 503 504 /error_pages/50x.html;
    
    location = /error_pages/404.html {
        internal;
        return 404 '{"error": "Not Found", "message": "L\'endpoint demand√© n\'existe pas", "code": 404}';
        add_header Content-Type "application/json; charset=utf-8";
    }
    
    location = /error_pages/50x.html {
        internal;
        return 500 '{"error": "Internal Server Error", "message": "Erreur temporaire du service", "code": 500}';
        add_header Content-Type "application/json; charset=utf-8";
    }
    
    # Gestion des timeouts upstream
    location @timeout {
        return 504 '{"error": "Gateway Timeout", "message": "Le service met trop de temps √† r√©pondre", "code": 504}';
        add_header Content-Type "application/json; charset=utf-8";
    }
    
    # Gestion des erreurs upstream
    location @backend_error {
        return 502 '{"error": "Bad Gateway", "message": "Service temporairement indisponible", "code": 502}';
        add_header Content-Type "application/json; charset=utf-8";
    }

    # ============================================
    # S√âCURIT√â ET FILTRAGE
    # ============================================
    
    # Bloquer les requ√™tes suspicieuses
    location ~* \.(php|asp|aspx|jsp)$ {
        return 444;  # Fermer la connexion sans r√©ponse
    }
    
    # Bloquer les tentatives d'acc√®s aux fichiers sensibles
    location ~* \.(env|git|svn|htaccess|htpasswd)$ {
        deny all;
        return 444;
    }
    
    # Bloquer les bots malveillants
    if ($is_bot) {
        return 429 '{"error": "Too Many Requests", "message": "Trafic bot d√©tect√©", "code": 429}';
    }
    
    # Bloquer les requ√™tes avec des user agents vides ou suspects
    if ($http_user_agent = "") {
        return 444;
    }
    
    if ($http_user_agent ~* "(sqlmap|nikto|dirbuster|masscan|nmap)") {
        return 444;
    }
}

# Configuration pour le d√©veloppement local (optionnel)
server {
    listen 8080;
    server_name localhost;
    
    # Pas de SSL en dev
    location / {
        proxy_pass http://coris_assistant_backend;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Pas de rate limiting en dev
        # Logs d√©taill√©s en dev
        access_log /var/log/nginx/dev_access.log main;
    }
}